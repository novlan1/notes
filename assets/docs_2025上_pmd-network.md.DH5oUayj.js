import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.6d7lLjym.js";const c=JSON.parse('{"title":"网络框架解析","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2025上/pmd-network.md","filePath":"docs/2025上/pmd-network.md","lastUpdated":1755397492000}'),n={name:"docs/2025上/pmd-network.md"};function l(h,s,r,p,k,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="网络框架解析" tabindex="-1">网络框架解析 <a class="header-anchor" href="#网络框架解析" aria-label="Permalink to &quot;网络框架解析&quot;">​</a></h1><h2 id="_1-network" tabindex="-1">1. network <a class="header-anchor" href="#_1-network" aria-label="Permalink to &quot;1. network&quot;">​</a></h2><h3 id="_1-1-tiprequest" tabindex="-1">1.1. TipRequest <a class="header-anchor" href="#_1-1-tiprequest" aria-label="Permalink to &quot;1.1. TipRequest&quot;">​</a></h3><ul><li><code>send</code>，调用 <code>doSend</code></li><li>抽象 <code>doSend</code></li><li>私有 <code>interceptBeforeSend</code>、<code>interceptAfterResponse</code>、<code>interceptError</code></li><li>管理 <code>requestInterceptors</code>、<code>responseInterceptors</code>、<code>errorInterceptors</code></li></ul><h3 id="_1-2-mprequest" tabindex="-1">1.2. MpRequest <a class="header-anchor" href="#_1-2-mprequest" aria-label="Permalink to &quot;1.2. MpRequest&quot;">​</a></h3><ul><li>继承 <code>TipRequest</code></li><li>实现 <code>doSend</code></li></ul><h3 id="_1-3-tiprequestfactory" tabindex="-1">1.3. TipRequestFactory <a class="header-anchor" href="#_1-3-tiprequestfactory" aria-label="Permalink to &quot;1.3. TipRequestFactory&quot;">​</a></h3><ul><li>抽象方法 <code>create</code>，返回 <code>TipRequest</code></li><li><code>create</code> 表示创建一个实例，用于一次执行请求发送</li></ul><h3 id="_1-4-mprequestfactory" tabindex="-1">1.4. MpRequestFactory <a class="header-anchor" href="#_1-4-mprequestfactory" aria-label="Permalink to &quot;1.4. MpRequestFactory&quot;">​</a></h3><ul><li>继承 <code>TipRequestFactory</code></li><li><code>create</code> 方法返回 <code>new MpRequest()</code></li></ul><h3 id="_1-5-networkmanager" tabindex="-1">1.5. NetworkManager <a class="header-anchor" href="#_1-5-networkmanager" aria-label="Permalink to &quot;1.5. NetworkManager&quot;">​</a></h3><ul><li>setRequestFactory</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">public </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(factory: TipRequestFactory) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.requestFactory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> factory;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>request(param)</code> 即 <code>NetworkManager.instance.request(param)</code></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">public </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param: ITipRequestParam): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  const request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.requestFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (this.requestDecorator) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requestDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.customInterceptor), param);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  return request.send(param, this.customInterceptor);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_2-vue-network" tabindex="-1">2. vue/network <a class="header-anchor" href="#_2-vue-network" aria-label="Permalink to &quot;2. vue/network&quot;">​</a></h2><h3 id="_2-1-示例" tabindex="-1">2.1. 示例 <a class="header-anchor" href="#_2-1-示例" aria-label="Permalink to &quot;2.1. 示例&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> factory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MpRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">factory.requestInterceptors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">factory.responseInterceptors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">factory.errorInterceptors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NetworkManager.instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRequestFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(factory);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NetworkManager.instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mpCodeScheduler);</span></span></code></pre></div>`,18)]))}const E=i(n,[["render",l]]);export{c as __pageData,E as default};
