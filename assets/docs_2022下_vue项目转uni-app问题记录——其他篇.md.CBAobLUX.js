import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.6d7lLjym.js";const o=JSON.parse('{"title":"1. 小程序特殊标签&API","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2022下/vue项目转uni-app问题记录——其他篇.md","filePath":"docs/2022下/vue项目转uni-app问题记录——其他篇.md","lastUpdated":1745466879000}'),l={name:"docs/2022下/vue项目转uni-app问题记录——其他篇.md"};function t(h,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_1-小程序特殊标签-api" tabindex="-1">1. 小程序特殊标签&amp;API <a class="header-anchor" href="#_1-小程序特殊标签-api" aria-label="Permalink to &quot;1. 小程序特殊标签&amp;API&quot;">​</a></h1><h2 id="_1-1-scroll-view" tabindex="-1">1.1. scroll-view <a class="header-anchor" href="#_1-1-scroll-view" aria-label="Permalink to &quot;1.1. scroll-view&quot;">​</a></h2><h3 id="_1-1-1-基础设置" tabindex="-1">1.1.1. 基础设置 <a class="header-anchor" href="#_1-1-1-基础设置" aria-label="Permalink to &quot;1.1.1. 基础设置&quot;">​</a></h3><p>小程序内无法获取或改变一个普通 <code>view</code> 的 <code>scrollTop</code>，只能用<code>scroll-view</code>。</p><p>这个标签需要设置 <code>scroll-y</code> 纵向滚动或者 <code>scroll-x</code> 横向滚动，默认都是<code>false</code>。</p><p><code>enable-flex=&quot;true&quot;</code> 是开始flex布局，默认为<code>false</code>。</p><h3 id="_1-1-2-动态scrollto" tabindex="-1">1.1.2. 动态scrollTo <a class="header-anchor" href="#_1-1-2-动态scrollto" aria-label="Permalink to &quot;1.1.2. 动态scrollTo&quot;">​</a></h3><p>设置<code>enhanced=&quot;true&quot;</code>后，可以通过下面代码动态改变其<code>scrollTop</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mpBackUp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSelectorQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#scheduleTreeId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scrollView</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]?.node;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scrollView) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scrollView.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrollTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        top: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_1-1-3-动态scrollintoview" tabindex="-1">1.1.3. 动态scrollIntoView <a class="header-anchor" href="#_1-1-3-动态scrollintoview" aria-label="Permalink to &quot;1.1.3. 动态scrollIntoView&quot;">​</a></h3><p>这个API的参数必须是 <code>scrollView</code> 的子元素，不能是子子元素。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSelectorQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#scheduleTreeId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scrollView</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]?.node;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scrollView) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scrollView.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrollIntoView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.my-team-id-sche&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span></code></pre></div><h3 id="_1-1-4-嵌套slot" tabindex="-1">1.1.4. 嵌套slot <a class="header-anchor" href="#_1-1-4-嵌套slot" aria-label="Permalink to &quot;1.1.4. 嵌套slot&quot;">​</a></h3><p><code>scroll-view</code>中嵌套<code>slot</code>后，<code>scroll-into-view</code>不生效，参考:</p><ol><li><a href="https://developers.weixin.qq.com/community/develop/doc/0006ca373801c8a733d816af256800" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/community/develop/doc/0006ca373801c8a733d816af256800</a></li><li><a href="https://developers.weixin.qq.com/community/develop/doc/00080caa80c200d35d0ffe0bb51c00" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/community/develop/doc/00080caa80c200d35d0ffe0bb51c00</a></li></ol><h2 id="_1-2-获取小程序运行环境" tabindex="-1">1.2. 获取小程序运行环境 <a class="header-anchor" href="#_1-2-获取小程序运行环境" aria-label="Permalink to &quot;1.2. 获取小程序运行环境&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">envVersion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">appId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wx?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAccountInfoSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?.()?.miniProgram </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SDKVersion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">platform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __wxConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><code>envVersion</code> 取值有：<code>develop</code>，<code>trial</code>，<code>release</code></p><p>类似的参数还有<code>version</code>、<code>platform</code>等，可以看上面代码。</p><h2 id="_1-3-跳转腾讯文档小程序" tabindex="-1">1.3. 跳转腾讯文档小程序 <a class="header-anchor" href="#_1-3-跳转腾讯文档小程序" aria-label="Permalink to &quot;1.3. 跳转腾讯文档小程序&quot;">​</a></h2><p>注意是<code>pages/detail/detail</code>，不可以是<code>pages/detail/detail.html</code>，否则第一次跳成功，后面跳会失败。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://docs.qq.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">navigateToMiniProgram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    appId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wxd45c635d754dbf59&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`pages/detail/detail?url=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    fail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>参考：<a href="https://developers.weixin.qq.com/community/develop/doc/0008281ac88f503bacaef712a51000" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/community/develop/doc/0008281ac88f503bacaef712a51000</a></p><h2 id="_1-4-wx-relaunch" tabindex="-1">1.4. wx.relaunch <a class="header-anchor" href="#_1-4-wx-relaunch" aria-label="Permalink to &quot;1.4. wx.relaunch&quot;">​</a></h2><p><code>wx.relaunch({url: url})</code>，关闭所有页面，重新打开当前页面，不会执行 <code>App.vue</code> 的 <code>beforeDestory</code>、<code>mounted</code> 方法。</p><h2 id="_1-5-小程序props" tabindex="-1">1.5. 小程序props <a class="header-anchor" href="#_1-5-小程序props" aria-label="Permalink to &quot;1.5. 小程序props&quot;">​</a></h2><p>小程序中<code>props</code>是对象的话，如果其有个属性值是<code>function</code>，只有初次赋值有效，后面替换的话，不会生效。就是不会替换成功，一直是初始的那个值。</p><h2 id="_1-6-undefined" tabindex="-1">1.6. undefined <a class="header-anchor" href="#_1-6-undefined" aria-label="Permalink to &quot;1.6. undefined&quot;">​</a></h2><p><code>uni-app</code>的小程序中如果对象为<code>undefined</code>时，渲染结果就是<code>undefined</code>，但是h5就会为空字符串，比如：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {{ item.awardStatusDesc || &#39;&#39; }} &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这里后面最好加 <code>||&#39;&#39;</code></p><h2 id="_1-7-key" tabindex="-1">1.7. key <a class="header-anchor" href="#_1-7-key" aria-label="Permalink to &quot;1.7. key&quot;">​</a></h2><p><code>:key=&quot;</code>section-\${index}<code>&quot;</code>这样的<code>key</code>没生效，编译后的<code>wxml</code>没有<code>wx:key</code>。</p><p>下面这样的可以才生效：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:key=&quot;getUniqueKey(&#39;nav&#39;, idx)&quot;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUniqueKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}-\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h2 id="_1-8-选择子组件元素" tabindex="-1">1.8. 选择子组件元素 <a class="header-anchor" href="#_1-8-选择子组件元素" aria-label="Permalink to &quot;1.8. 选择子组件元素&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSelectorQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`.wrap &gt;&gt;&gt; #\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_1-9-qs版本过高时-微信小程序报错" tabindex="-1">1.9. qs版本过高时，微信小程序报错 <a class="header-anchor" href="#_1-9-qs版本过高时-微信小程序报错" aria-label="Permalink to &quot;1.9. qs版本过高时，微信小程序报错&quot;">​</a></h2><p>报错内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Reflect.apply requires the first argument be a function</span></span></code></pre></div><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2023/8/own_mike_bbddb032816df0fe51.jpg" width="375"><p>解决：<code>qs</code>从<code>6.11.2</code>降级到<code>6.5.2</code>时，亲测正常。</p><p>参考：</p><ol><li><a href="https://developers.weixin.qq.com/community/develop/doc/0000acb32a08f0aa8ddd47b6b51800" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/community/develop/doc/0000acb32a08f0aa8ddd47b6b51800</a></li></ol><h2 id="_1-10-click-native" tabindex="-1">1.10. click.native <a class="header-anchor" href="#_1-10-click-native" aria-label="Permalink to &quot;1.10. click.native&quot;">​</a></h2><p><code>click.native</code>可以监听组件根元素的原生事件，但是需要注意子组件的根元素，不要已经用<code>click.stop</code>监听了，否则<code>click</code>事件不生效。</p><p>下面是错误使用示例。</p><p>父组件：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">press-cell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  @click.native</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;onOptionTap(item)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  xxx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">press-cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>子组件：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @click.stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;onClick&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    xxx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>参考：</p><ol><li><a href="https://blog.csdn.net/qq_25906119/article/details/128839414" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_25906119/article/details/128839414</a></li><li><a href="https://ask.dcloud.net.cn/question/76184" target="_blank" rel="noreferrer">https://ask.dcloud.net.cn/question/76184</a></li></ol><h2 id="_1-11-不要滥用原生标签" tabindex="-1">1.11. 不要滥用原生标签 <a class="header-anchor" href="#_1-11-不要滥用原生标签" aria-label="Permalink to &quot;1.11. 不要滥用原生标签&quot;">​</a></h2><p><code>uni-app</code> 项目自定义组件标签不能使用原生标签，比如不能用 ListView，否则透传的参数，会变成 <code>$event</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onFilterClicked</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // #ifndef H5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event?.detail?.__args__?.[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // #endif</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;onFilterClicked&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>上面这种兼容是丑陋的，容易遗忘，应该避免。</p><h1 id="_2-同时开发" tabindex="-1">2. 同时开发 <a class="header-anchor" href="#_2-同时开发" aria-label="Permalink to &quot;2. 同时开发&quot;">​</a></h1><p>1、h5和小程序同时开发一个需求时，推荐先做h5，因为h5编译快，api规范，相对来讲开发者更熟悉。</p><p>2、发现h5事件正常但是小程序不正常，检查<code>v-for</code>的<code>key</code>是否有重复</p><p>3、发现h5样式正常，但是小程序不正常，检查是否使用了<code>()=&gt;import(&#39;&#39;)</code></p><h1 id="_3-qq小程序" tabindex="-1">3. qq小程序 <a class="header-anchor" href="#_3-qq小程序" aria-label="Permalink to &quot;3. qq小程序&quot;">​</a></h1><h2 id="_3-1-不支持-virtualhost" tabindex="-1">3.1. 不支持 virtualHost <a class="header-anchor" href="#_3-1-不支持-virtualhost" aria-label="Permalink to &quot;3.1. 不支持 virtualHost&quot;">​</a></h2><p>qq小程序不支持 <code>virtualHost</code>，类似 <code>press-tabs press-tab</code>，<code>press-tabbar press-tabbar-item</code>，有些写在子元素根标签的样式不生效，比如<code>width: 100%</code>, <code>flex: 1</code>，<code>flex-shrink: 0</code>等。</p><p>这类css属性的特点是必须和特定的父元素在一起才行，所以需要额外设置下。可以用这种方式：</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// press-tabbar.vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.press-tabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ::v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deep press</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tabbar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_3-2-不支持console-table" tabindex="-1">3.2. 不支持console.table <a class="header-anchor" href="#_3-2-不支持console-table" aria-label="Permalink to &quot;3.2. 不支持console.table&quot;">​</a></h2><p>需要自己<code>polyfill</code>下。</p><h2 id="_3-3-动态设置style时-该有的空格不能缺" tabindex="-1">3.3. 动态设置style时，该有的空格不能缺 <a class="header-anchor" href="#_3-3-动态设置style时-该有的空格不能缺" aria-label="Permalink to &quot;3.3. 动态设置style时，该有的空格不能缺&quot;">​</a></h2><p>比如下面这个：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">computed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  transformStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`transform: translate3d(0rpx, \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">currentScroll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}rpx, 0rpx);\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // #ifdef H5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`transform: translate3d(0px, \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">currentScroll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}rem, 0px);\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // #endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>如果 translate3d 中没有空格的话，会设置不生效。</p><h2 id="_3-4-scroll-view" tabindex="-1">3.4. scroll-view <a class="header-anchor" href="#_3-4-scroll-view" aria-label="Permalink to &quot;3.4. scroll-view&quot;">​</a></h2><p>qq小程序 <code>scroll-view</code> 不支持 <code>enable-flex</code>，手动写<code>display: flex</code>也不行。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.tip-match-pk-schedule-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .45</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // qq小程序scroll-view不支持enable-flex，子元素需要如下设置，否则无法横向布局。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,76)]))}const c=i(l,[["render",t]]);export{o as __pageData,c as default};
