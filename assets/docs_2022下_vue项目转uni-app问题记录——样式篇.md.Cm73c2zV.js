import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.6d7lLjym.js";const r=JSON.parse('{"title":"1. 样式","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2022下/vue项目转uni-app问题记录——样式篇.md","filePath":"docs/2022下/vue项目转uni-app问题记录——样式篇.md","lastUpdated":1759945822000}'),n={name:"docs/2022下/vue项目转uni-app问题记录——样式篇.md"};function l(h,s,p,k,d,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_1-样式" tabindex="-1">1. 样式 <a class="header-anchor" href="#_1-样式" aria-label="Permalink to &quot;1. 样式&quot;">​</a></h1><h2 id="_1-1-fixed弹窗滑动时-下层页面也跟着滑动-穿透问题" tabindex="-1">1.1. fixed弹窗滑动时，下层页面也跟着滑动（穿透问题） <a class="header-anchor" href="#_1-1-fixed弹窗滑动时-下层页面也跟着滑动-穿透问题" aria-label="Permalink to &quot;1.1. fixed弹窗滑动时，下层页面也跟着滑动（穿透问题）&quot;">​</a></h2><p>这里<a href="http://t.zoukankan.com/zlfProgrammer-p-10750058.html" target="_blank" rel="noreferrer">有篇文章</a>介绍的比较好。</p><p>对于uni-app来说，最简单的方法应该是第一种，在弹窗外层元素加上事件<code>@touchmove.stop=&quot;preventTouchMove&quot;</code>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventTouchMove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>如果弹窗内部有滚动元素，则在滚动元素外层用<code>scroll-view</code>包裹。</p><p>这个 scroll-view 的子孙元素不能添加 overflow: auto，否则无法滚动。</p><p>另外，试了下在<code>page-meta</code>上加上 <code>page-style=&quot;height: 100%; overflow: &#39;hidden&#39;&quot;</code> 是不生效的。</p><h2 id="_1-2-安全区" tabindex="-1">1.2. 安全区 <a class="header-anchor" href="#_1-2-安全区" aria-label="Permalink to &quot;1.2. 安全区&quot;">​</a></h2><p>h5的时候有下面的样式，就是处理ios的刘海屏。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: constant(safe-area-inset-top);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: env(safe-area-inset-top);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: constant(safe-area-inset-left);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: env(safe-area-inset-left);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: constant(safe-area-inset-right);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: env(safe-area-inset-right);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* padding-bottom: constant(safe-area-inset-bottom);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  padding-bottom: env(safe-area-inset-bottom); */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在小程序中，这段样式需要去掉，否则会在自定义导航栏下面出现一条白框。</p><p>在uni-app项目中，只要把上面代码移动到<code>index.html</code>中就可以了，因为只有h5项目才会使用这个<code>index.html</code>文件。</p><h2 id="_1-3-page-meta" tabindex="-1">1.3. page-meta <a class="header-anchor" href="#_1-3-page-meta" aria-label="Permalink to &quot;1.3. page-meta&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;page-meta :root-font-size=&quot;fontsize+&#39;px&#39;&quot;&gt;&lt;/page-meta&gt;</span></span></code></pre></div><p>page-meta只能是页面内的第一个节点，可以实现rem</p><h2 id="_1-4-slot问题" tabindex="-1">1.4. slot问题 <a class="header-anchor" href="#_1-4-slot问题" aria-label="Permalink to &quot;1.4. slot问题&quot;">​</a></h2><p>uni-app是支持具名插槽的，有一点需要注意，对于写在slot标签上的类名，h5会下发到slot内部的外层元素上，而小程序则会创建view元素，在这个元素上添加类名。</p><p>如果遇到slot的样式异常，可以先排查下这里。</p><p>举个例子：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">SomeComp</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extra&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> #middle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">SomeComp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>SomeComp组件内容如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inner&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在h5中会被渲染成：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extra inner&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在小程序会被渲染成：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extra&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inner&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;middle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>子组件加上下面代码可以解决：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  virtualHost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h2 id="_1-5-样式隔离" tabindex="-1">1.5. 样式隔离 <a class="header-anchor" href="#_1-5-样式隔离" aria-label="Permalink to &quot;1.5. 样式隔离&quot;">​</a></h2><p>主要涉及 styleIsolation 属性。文档地址<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html#%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F%E9%9A%94%E7%A6%BB" target="_blank" rel="noreferrer">在这里</a>。</p><p>styleIsolation 选项支持以下取值：</p><ul><li>isolated 表示启用样式隔离，在自定义组件内外，使用 class 指定的样式将不会相互影响（一般情况下的默认值）；</li><li>apply-shared 表示页面 wxss 样式将影响到自定义组件，但自定义组件 wxss 中指定的样式不会影响页面；</li><li>shared <strong>表示页面 wxss 样式将影响到自定义组件，自定义组件 wxss 中指定的样式也会影响页面和其他设置了 apply-shared 或 shared 的自定义组件</strong>。（这个选项在插件中不可用）</li></ul><h2 id="_1-6-uni-app在h5端默认开启scoped" tabindex="-1">1.6. uni-app在h5端默认开启scoped <a class="header-anchor" href="#_1-6-uni-app在h5端默认开启scoped" aria-label="Permalink to &quot;1.6. uni-app在h5端默认开启scoped&quot;">​</a></h2><p>H5端为了隔离页面间的样式默认启用了 scoped，且无法取消</p><ol><li><a href="https://uniapp.dcloud.net.cn/matter.html#h5%E6%AD%A3%E5%B8%B8%E4%BD%86app%E5%BC%82%E5%B8%B8%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7" target="_blank" rel="noreferrer">官方文档</a></li><li><a href="https://blog.csdn.net/qq_34825590/article/details/119412740" target="_blank" rel="noreferrer">相关文章</a></li></ol><h2 id="_1-7-不要在-class、style-中使用复杂对象" tabindex="-1">1.7. 不要在 class、style 中使用复杂对象 <a class="header-anchor" href="#_1-7-不要在-class、style-中使用复杂对象" aria-label="Permalink to &quot;1.7. 不要在 class、style 中使用复杂对象&quot;">​</a></h2><p>不能在 class、style 中直接使用 函数、data、计算属性 的对象，比如：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scheItemStyle[index]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>但是可以这样：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ height: scheItemStyle[index].height }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>也就是使用某个具体的属性（字符串、数字等非引用类型类型），但不能是对象、数组等。</p><p>这种也不可以：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    {&#39;hidden-van-tabs&#39;: stageCfgList.length === 1},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ]&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这种可以：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    {&#39;hidden-van-tabs&#39;: isOnlyOneStage},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ]&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><p>后面发现用字符串就可以了。</p><p>这样会报错</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:style=&quot;getString(item,index)&quot;</span></span></code></pre></div><p>这样就不会</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type === &#39;card&#39;? getString(item,index): getString(item,index)&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>可以变通一下，这样也不会报错</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true ? getString(item,index) : &#39;&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="_1-8-v-if-vs-v-show" tabindex="-1">1.8. v-if vs v-show <a class="header-anchor" href="#_1-8-v-if-vs-v-show" aria-label="Permalink to &quot;1.8. v-if vs v-show&quot;">​</a></h2><p>都知道v-show比v-if性能高，但是uni-app不支持v-show，对于dom节点特别大的页面来说，切换tab只能用v-show，v-if太卡。</p><p>这时可以用修改动态元素样式来实现，示例如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[&#39;double-fail-wrap&#39;, \`double-fail-wrap-\${curTab}\`]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.double-fail-wrap-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loser-sche-map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.double-fail-wrap-2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">winner-sche-map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="_1-9-css变量" tabindex="-1">1.9. CSS变量 <a class="header-anchor" href="#_1-9-css变量" aria-label="Permalink to &quot;1.9. CSS变量&quot;">​</a></h2><p>uni-app 中css变量可以用 page，在h5模式下会自动转成<code>uni-page-body</code>，不能用<code>:root</code>，小程序中不生效，如：</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 修改switch的一些变量</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --switch-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.88</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --switch-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.48</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_1-10-小程序中的-empty问题" tabindex="-1">1.10. 小程序中的<code>:empty</code>问题 <a class="header-anchor" href="#_1-10-小程序中的-empty问题" aria-label="Permalink to &quot;1.10. 小程序中的\`:empty\`问题&quot;">​</a></h2><p>uni-app 小程序 <code>:empty</code>，可能会存在问题，slot 即使父组件不传的情况下，还是会生成 <code>&lt;scoped-slots-label /&gt;</code>，导致永远不为空，无法命中 <code>empty</code>。</p><h2 id="_1-11-样式层级问题" tabindex="-1">1.11. 样式层级问题 <a class="header-anchor" href="#_1-11-样式层级问题" aria-label="Permalink to &quot;1.11. 样式层级问题&quot;">​</a></h2><p>有些组件不要加scoped，加了以后，外面的样式很难覆盖里面的。</p><p>比如组件内的这个样式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.press-popover--right.data-v-3fdac1da</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><p>比组件外的这个样式优先级高。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.popover-wrap</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .demo-nav-popover--right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><p>这块总之很乱，要每个case去看。</p><h2 id="_1-12-rpx精度丢失" tabindex="-1">1.12. rpx精度丢失 <a class="header-anchor" href="#_1-12-rpx精度丢失" aria-label="Permalink to &quot;1.12. rpx精度丢失&quot;">​</a></h2><p>小程序 rpx 转 px 时会直接去掉小数点，导致赛程树错位，用原生 rem 解决</p><h2 id="_1-13-自定义组件多节点带来的样式问题" tabindex="-1">1.13. 自定义组件多节点带来的样式问题 <a class="header-anchor" href="#_1-13-自定义组件多节点带来的样式问题" aria-label="Permalink to &quot;1.13. 自定义组件多节点带来的样式问题&quot;">​</a></h2><p>自定义组件渲染差异</p><p>微信（可以使用<code>virtualHost</code>配置）/QQ/百度/字节跳动这四家小程序，自定义组件在渲染时会比App/H5端多一级节点，在写样式时需要注意：</p><ol><li>使用<code>flex</code>布局时，直接给自定义组件的父元素设置为·不能影响到自定义组件内部的根节点，需要设置当前自定义组件为<code>display:flex</code>才可以。</li><li>在自定义组件内部设置根元素高度为<code>100%</code>，不能撑满自定义组件父元素。需要同时设置当前自定义组件高度为<code>100%</code>才可以。</li></ol><p>支付宝小程序默认启用了 virtualHost 配置不会插入节点，一般不存在如上问题。</p><p>参考：<a href="https://uniapp.dcloud.net.cn/matter.html" target="_blank" rel="noreferrer">uni-app官网</a></p><h2 id="_1-14-条件编译" tabindex="-1">1.14. 条件编译 <a class="header-anchor" href="#_1-14-条件编译" aria-label="Permalink to &quot;1.14. 条件编译&quot;">​</a></h2><p>样式文件中的条件编译需要用<code>/* */</code>包裹，不能用<code>/** */</code>包裹。</p><p>下图左边不生效，右边才生效。</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2023/6/own_mike_9637fa73dedc6e87b0.png" width="500"><h2 id="_1-15-样式转化" tabindex="-1">1.15. 样式转化 <a class="header-anchor" href="#_1-15-样式转化" aria-label="Permalink to &quot;1.15. 样式转化&quot;">​</a></h2><p>对<code>page</code>设置的样式，在h5中会被转成<code>uni-page-body</code>：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2023/6/own_mike_af5205041bba65884d.png" width="700"><p>对<code>html</code>和<code>body</code>设置的样式，在小程序中会被转成<code>page</code>：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2023/6/own_mike_1018511e52a1f96ed5.png" width="700"><p>对于这些容易造成歧义、容易产生误解，理解成本较高的转化样式，建议使用条件编译，只在本平台写本台可识别的样式，减少这种转化。</p><h2 id="_1-16-多行省略号兼容性" tabindex="-1">1.16. 多行省略号兼容性 <a class="header-anchor" href="#_1-16-多行省略号兼容性" aria-label="Permalink to &quot;1.16. 多行省略号兼容性&quot;">​</a></h2><p>不是<code>uni-app</code>项目独有的问题，这里也记录下。</p><p>多行省略号只能支持 <code>webkit</code> 内核浏览器, IE系就不兼容，所以对于多行省略号是不能用<code>stylelint</code>的默认规则。</p><ul><li>溢出隐藏：<code>overflow: hidden;</code></li><li>省略号：<code>text-overflow: ellipsis; display: -webkit-box;</code></li><li>弹性盒模型： 设置弹性盒子的子元素的排列方式 ：<code>-webkit-box-orient: vertical;</code> 设置显示文本的行数：<code>-webkit-line-clamp: 3;</code> (最多显示3行)</li></ul><h2 id="_1-17-page大部分情况下都应该为overflow-hidden" tabindex="-1">1.17. page大部分情况下都应该为overflow:hidden <a class="header-anchor" href="#_1-17-page大部分情况下都应该为overflow-hidden" aria-label="Permalink to &quot;1.17. page大部分情况下都应该为overflow:hidden&quot;">​</a></h2><h3 id="_1-17-1-page" tabindex="-1">1.17.1. page <a class="header-anchor" href="#_1-17-1-page" aria-label="Permalink to &quot;1.17.1. page&quot;">​</a></h3><p>移动端，不论是h5还是小程序，大部分页面应该设置为<code>height: 100%;overflow: hidden;</code>，这样整个页面才不会跟着滑动，才不会漏出最底层，用户体验才好点。</p><p>如果是渐变式导航，则相反，<code>page</code>需要设置为<code>height: auto</code>，这样才会触发<code>onPageScroll</code>事件。此外，想让<code>page</code>滚动，那么<code>page</code>下的第一层的高度要大于一屏才可以，也就是不能在<code>demo-wrap</code>上设置<code>height: 100%</code>，可以给<code>height: auto</code>，或具体的高度。</p><p>除了需要<code>onPageScroll</code>事件的，其他都建议<code>page</code>设置为<code>overflow: hidden</code>。</p><p>设置<code>page</code>为<code>overflow:hidden</code>还有个好处，不用再给<code>page</code>设置额外的背景色了，反正看不见，只关心页面就行了，没铺满的就铺满即可。</p><h3 id="_1-17-2-demo-wrap" tabindex="-1">1.17.2. demo-wrap <a class="header-anchor" href="#_1-17-2-demo-wrap" aria-label="Permalink to &quot;1.17.2. demo-wrap&quot;">​</a></h3><p>既然<code>page</code>设置了<code>overflow:hidden</code>，那么<code>page</code>下的第一个元素如果超出了屏幕高度，则需要设置<code>overflow: auto;height: 100%;</code>，否则就会显示不全。</p><p>如果不加<code>demo-wrap</code>，则页面在h5下可以滚动，在小程序下不可以滚动。因为h5中<code>uni-page-body</code>设置了<code>overflow:auto</code>，而小程序没有这个中间层。</p><h3 id="_1-17-3-press-ui" tabindex="-1">1.17.3. press-ui <a class="header-anchor" href="#_1-17-3-press-ui" aria-label="Permalink to &quot;1.17.3. press-ui&quot;">​</a></h3><p>对于<code>press-ui</code>示例项目：</p><ul><li>H5中<code>html/body</code>设置了<code>height: 100%;overflow:hidden</code>，<code>uni-page-body</code>设置了<code>height: 100%;overflow:auto</code></li><li>小程序中，<code>page</code>设置了<code>height: 100%;overflow:hidden;</code>，页面顶层需要滚动的<code>dom</code>，加上类名<code>demo-wrap</code>，其样式为<code>height: 100%；overflow: auto;</code>。</li></ul><p>小程序下页面级别的<code>vue</code>文件中，对<code>page</code>的样式设置：</p><ul><li>小程序下，不能加<code>scoped</code>，否则无效。</li><li>H5下，加了<code>scoped</code>，<code>page</code>转化的<code>uni-page-body</code>样式是生效的。</li></ul><h2 id="_1-18-安全区" tabindex="-1">1.18. 安全区 <a class="header-anchor" href="#_1-18-安全区" aria-label="Permalink to &quot;1.18. 安全区&quot;">​</a></h2><p>什么时候需要适配安全区呢，底部是<code>tabbar</code>、购买按钮、输入框等不随页面滚动的元素。</p><h2 id="_1-19-页面样式" tabindex="-1">1.19. 页面样式 <a class="header-anchor" href="#_1-19-页面样式" aria-label="Permalink to &quot;1.19. 页面样式&quot;">​</a></h2><p>归类，页面一定要有统一的包裹层<code>class</code>。好处是方便维护。</p><h2 id="_1-20-动态class" tabindex="-1">1.20. 动态class <a class="header-anchor" href="#_1-20-动态class" aria-label="Permalink to &quot;1.20. 动态class&quot;">​</a></h2><p>小程序不支持这个</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :class=&quot;\`tip-match-schedule-tab-item--scroll-\${col - scrollTime}\`&quot;</span></span></code></pre></div><p>但是支持这个</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :class=&quot;[\`tip-match-schedule-tab-item--scroll-\${col - scrollTime}\`]&quot;</span></span></code></pre></div><h1 id="_2-vant" tabindex="-1">2. vant <a class="header-anchor" href="#_2-vant" aria-label="Permalink to &quot;2. vant&quot;">​</a></h1><h2 id="_2-1-van-tab" tabindex="-1">2.1. van-tab <a class="header-anchor" href="#_2-1-van-tab" aria-label="Permalink to &quot;2.1. van-tab&quot;">​</a></h2><h3 id="_2-1-1-change事件参数" tabindex="-1">2.1.1. change事件参数 <a class="header-anchor" href="#_2-1-1-change事件参数" aria-label="Permalink to &quot;2.1.1. change事件参数&quot;">​</a></h3><p>uni-app中 vant-tab 的change事件暴露参数为event，需适配</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.curTab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e.detail.name;</span></span></code></pre></div><h3 id="_2-1-2-v-model无效" tabindex="-1">2.1.2. v-model无效 <a class="header-anchor" href="#_2-1-2-v-model无效" aria-label="Permalink to &quot;2.1.2. v-model无效&quot;">​</a></h3><p>uni-app 中 van-tab 使用 v-model 无效，会被转为，所以必须要想拿到改变后的tab，要写change事件，因为 van-weapp 默认更新的是 active 属性。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">van-tabs</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ active }}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bind:change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;onChange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">van-tabs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    active: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showToast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`切换到标签 \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">event</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">detail</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;none&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="_2-1-3-性能问题" tabindex="-1">2.1.3. 性能问题 <a class="header-anchor" href="#_2-1-3-性能问题" aria-label="Permalink to &quot;2.1.3. 性能问题&quot;">​</a></h3><p><code>tabMap[curTab]</code>不要写在 template 中，否则切换 tab 时会有延迟，也不要写在 computed 中，最好不依赖 curTab。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 存在问题 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Comp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tabMap[curTab]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 不推荐 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Comp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">curList</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">computed: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  curList() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    const { tabMap, curTab } = this;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    return tabMap[curTab]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>更好的方式是不依赖curTab</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:sche-list=&quot;stageScheMap[index]&quot;</span></span></code></pre></div>`,130)]))}const c=i(n,[["render",l]]);export{r as __pageData,c as default};
