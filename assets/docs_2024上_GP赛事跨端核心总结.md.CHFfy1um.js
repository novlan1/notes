import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.6d7lLjym.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2024上/GP赛事跨端核心总结.md","filePath":"docs/2024上/GP赛事跨端核心总结.md","lastUpdated":1746626587000}'),p={name:"docs/2024上/GP赛事跨端核心总结.md"};function e(t,s,l,k,d,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h2 id="_1-开始" tabindex="-1">1. 开始 <a class="header-anchor" href="#_1-开始" aria-label="Permalink to &quot;1. 开始&quot;">​</a></h2><p>简单记录下GP赛事跨端中，遇到的问题和解决的办法。</p><h2 id="_2-记录" tabindex="-1">2. 记录 <a class="header-anchor" href="#_2-记录" aria-label="Permalink to &quot;2. 记录&quot;">​</a></h2><h3 id="_2-1-登录态" tabindex="-1">2.1. 登录态 <a class="header-anchor" href="#_2-1-登录态" aria-label="Permalink to &quot;2.1. 登录态&quot;">​</a></h3><p>前提是我们的小程序要合入对方的小程序，然而，对方不给小程序密钥。</p><p>观察发现他们小程序有返回 MSDK 登录态，申请转换关系权限后，就可以直接拿到登录我们的页面了。简单高效，也算是一个 <code>hack</code> 的方法吧。</p><p>具体通信方式是，在小程序下，<code>onLaunch</code> 时注入一个 <code>MSDK_PARAMS</code> 的 <code>storage</code>。网络框架检测到这个 <code>storage</code> 时，就携带在 url 参数上。</p><p>一个细节是，每个页面的 <code>onShow</code> 方法都要注入，为了防止登录态失效后重新返回我们页面时，登录态没有刷新。</p><p>核心逻辑地址：press-plus/tree/release/src/packages/common/mp-msdk</p><h3 id="_2-2-登录态失效跳转" tabindex="-1">2.2. 登录态失效跳转 <a class="header-anchor" href="#_2-2-登录态失效跳转" aria-label="Permalink to &quot;2.2. 登录态失效跳转&quot;">​</a></h3><p>由于是独立分包，登录态的来源又只能由宿主小程序产生，所以，当我们的页面失效后，需要跳转到他们登录页面，返回返回。</p><p>核心逻辑:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 宿主小程序登录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loginInGPGameMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pages</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCurrentPages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> curPage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pages[pages.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> curPage;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WELCOME_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/pages/welcome/welcome&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">route</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WELCOME_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">navigateTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ url: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WELCOME_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WELCOME_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}?path=/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">route</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&amp;data=\${</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeURIComponent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">navigateTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ url });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-3-appid-转换关系申请" tabindex="-1">2.3. appId 转换关系申请 <a class="header-anchor" href="#_2-3-appid-转换关系申请" aria-label="Permalink to &quot;2.3. appId 转换关系申请&quot;">​</a></h3><p>由于采用 msdk 登录态，所以需要申请&quot;宿主小程序&quot;到&quot;人生&quot;的转换关系。</p><p>同时又涉及参赛角色，所以又需要申请&quot;人生&quot;到&quot;宿主游戏&quot;的转换关系。</p><p>都是微信、QQ双端。</p><h3 id="_2-4-独立分包路由拦截" tabindex="-1">2.4. 独立分包路由拦截 <a class="header-anchor" href="#_2-4-独立分包路由拦截" aria-label="Permalink to &quot;2.4. 独立分包路由拦截&quot;">​</a></h3><p>小程序内采用的是独立分包，H5不需要，所以需要 hook 路由，找到对应的分包，然后修改跳转路径。</p><p>核心逻辑地址：press-plus/tree/release/src/packages/common/uni-router</p><h3 id="_2-5-独立分包白屏" tabindex="-1">2.5. 独立分包白屏 <a class="header-anchor" href="#_2-5-独立分包白屏" aria-label="Permalink to &quot;2.5. 独立分包白屏&quot;">​</a></h3><p>能引起这个问题的原因挺多，这里的原因是引入了一个比较深的工具方法。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { NUMBER_CHI_MAP } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@xxx/t-comm/lib/base/number/number&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>推测是由于路径深，打包没找到。uni-app 比较迷，不清楚具体机制，还是排除法发现的。</p><p>这个 <code>case</code> 的解决办法是，自己写 <code>NUMBER_CHI_MAP</code>。</p><h3 id="_2-6-路由简化" tabindex="-1">2.6. 路由简化 <a class="header-anchor" href="#_2-6-路由简化" aria-label="Permalink to &quot;2.6. 路由简化&quot;">​</a></h3><p>统一路由跳转使用方式，之前在另一个项目中用啥方式的都有，需要各种兜底。本项目又用了微前端，需要跳到对应分包，处理起来会更麻烦。</p><p>为了减少后续维护成本，统一路由跳转使用方式，只能用 <code>path</code>、<code>query</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/single-match-detail&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  query: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    siteId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parentId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    childId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="_2-7-查看地图-已废弃" tabindex="-1">2.7. 查看地图（已废弃） <a class="header-anchor" href="#_2-7-查看地图-已废弃" aria-label="Permalink to &quot;2.7. 查看地图（已废弃）&quot;">​</a></h3><p>QQ小程序在 iOS 下不支持 <code>openLocation</code>，而 <code>webview</code> 的方式又没法添加域名校验。</p><p>采用的方法是，打开一个自己的 <code>webview</code> 页面，就是有权限加校验文件，内部嵌套地图 <code>apis.map.qq.com</code> 的地址。</p><p>也就是 <code>A webview</code> 打开 <code>B url</code>，<code>B url</code> 是空壳子，装的是 <code>C url</code>。</p><p>注意几点，B 不能加登录态校验，且注意 <code>html title</code>，因为 <code>webview</code> 会将嵌入网页的 <code>title</code> 当作 <code>navigationTitle</code>。</p><p>后面发现这个方法没用，iOS 下依旧会报域名校验错误。</p><h3 id="_2-8-独立分包-微前端" tabindex="-1">2.8. 独立分包 + 微前端 <a class="header-anchor" href="#_2-8-独立分包-微前端" aria-label="Permalink to &quot;2.8. 独立分包 + 微前端&quot;">​</a></h3><p>核心逻辑。</p><p>相比普通分包，个人感觉更多是工程上的好处，不用担心和主应用互相影响，不会增加主应用主包大小，不用互相扯皮。</p><p>使用 <code>guru</code> 后，通信方式需要用框架给的，或者放到 <code>storage</code> 中。不过我们的业务大部分用不到，核心点在于全局组件和全局逻辑放在了 <code>global-component</code> 和 <code>main.js</code> 中，这意味着每个独立分包（这里也是子应用）都有自己的登录态、全局组件、全局变量，根本不需要通信。不过应该始终记住此限制，遇到问题时能及时发现。</p><h3 id="_2-9-动态切换后端环境" tabindex="-1">2.9. 动态切换后端环境 <a class="header-anchor" href="#_2-9-动态切换后端环境" aria-label="Permalink to &quot;2.9. 动态切换后端环境&quot;">​</a></h3><p>借鉴了宿主小程序，实现了运行时切换后端环境，这样就不用打包两份了。</p><p>不过，这里也是目前唯一需要子应用间通信的地方，因为每个子应用的 <code>window.isTestNet</code> 都是独立的，解决办法是在 <code>main.js</code> 中代理 <code>window.isTestNet</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hookTestNet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STORAGE_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;DZS_MATCH_NET_ENV_DEBUG&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;isTestNet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStorageSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">STORAGE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setStorageSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">STORAGE_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;release&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #ifndef H5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hookTestNet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #endif</span></span></code></pre></div><h3 id="_2-10-拉起游戏" tabindex="-1">2.10. 拉起游戏 <a class="header-anchor" href="#_2-10-拉起游戏" aria-label="Permalink to &quot;2.10. 拉起游戏&quot;">​</a></h3><p>核心逻辑，包括微信、QQ小程序的拉起。</p><p>已沉淀到 press-plus 中。</p>`,46)]))}const c=i(p,[["render",e]]);export{o as __pageData,c as default};
