import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.6d7lLjym.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2025下/git.md","filePath":"docs/2025下/git.md","lastUpdated":1759946101000}'),n={name:"docs/2025下/git.md"};function l(h,s,p,k,m,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h3 id="_1-修改最新-commit-的-message" tabindex="-1">1. 修改最新 commit 的 message <a class="header-anchor" href="#_1-修改最新-commit-的-message" aria-label="Permalink to &quot;1. 修改最新 commit 的 message&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --amend</span></span></code></pre></div><h3 id="_2-修改老旧commit的message" tabindex="-1">2. 修改老旧commit的message <a class="header-anchor" href="#_2-修改老旧commit的message" aria-label="Permalink to &quot;2. 修改老旧commit的message&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [要更改的commit的上一级commit]</span></span></code></pre></div><p>git rebase工作的过程中，就是用了分离头指针。rebase意味着基于新base的commit来变更部分commits。它处理的时候，把HEAD指向base的commit，此时如果该commit没有对应branch，就处于分离头指针的状态，然后重新一个一个生成新的commit，当rebase创建完最后一个commit后，结束分离头状态，Git让变完基的分支名指向HEAD。</p><h3 id="_3-把连续的多个commit整理成1个" tabindex="-1">3. 把连续的多个commit整理成1个 <a class="header-anchor" href="#_3-把连续的多个commit整理成1个" aria-label="Permalink to &quot;3. 把连续的多个commit整理成1个&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [要更改的commit的上一级commit]</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pick</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   7735d66</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #合并到该commit上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">squash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bbe6d53</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">squash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9eb3188</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">squash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 7d33868</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Rebase d9f9d11..7d33868 onto d9f9d11 (4 commands)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Commands:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># p, pick &lt;commit&gt; = use commit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#39;s log message</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># b, break = stop here (continue rebase later with &#39;git rebase --continue&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># d, drop &lt;commit&gt; = remove commit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># l, label &lt;label&gt; = label current HEAD with a name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># t, reset &lt;label&gt; = reset HEAD to a label</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .       create a merge commit using the original merge commit&#39;s</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .       message (or the oneline, if no original merge commit was</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span></code></pre></div>`,8)]))}const r=i(n,[["render",l]]);export{d as __pageData,r as default};
