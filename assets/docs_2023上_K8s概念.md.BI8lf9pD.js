import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.6d7lLjym.js";const E=JSON.parse('{"title":"1. 概念","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2023上/K8s概念.md","filePath":"docs/2023上/K8s概念.md","lastUpdated":1746754832000}'),l={name:"docs/2023上/K8s概念.md"};function p(h,s,t,k,d,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_1-概念" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h1><p>这里记录下K8s的几个核心概念。</p><h2 id="_1-1-pod" tabindex="-1">1.1. pod <a class="header-anchor" href="#_1-1-pod" aria-label="Permalink to &quot;1.1. pod&quot;">​</a></h2><p><code>Pod</code> 是 <code>Kubernetes</code> 创建或部署的最小/最简单的基本单位，一个<code>Pod</code>代表集群上正在运行的一个进程。</p><p>一个<code>Pod</code>由一个或多个容器组成，<code>Pod</code>中容器共享网络、存储和计算资源，在同一台<code>Docker</code>主机上运行。</p><p>为什么要使用<code>pod</code>，为什么不能直接使用容器呢？使用<code>pod</code>，相当于一个逻辑主机，还记得创建一个<code>vm</code>，在<code>vm</code>上运行几个进程么，其实道理是一样的，<code>pod</code>的存在主要是让几个紧密连接的几个容器之间共享资源，例如<code>ip</code>地址，共享存储等信息。如果直接调度容器的话，那么几个容器可能运行在不同的主机上，这样就增加了系统的复杂性。</p><h2 id="_1-2-pod-控制器" tabindex="-1">1.2. Pod 控制器 <a class="header-anchor" href="#_1-2-pod-控制器" aria-label="Permalink to &quot;1.2. Pod 控制器&quot;">​</a></h2><h3 id="_1-2-1-deployment" tabindex="-1">1.2.1. Deployment <a class="header-anchor" href="#_1-2-1-deployment" aria-label="Permalink to &quot;1.2.1. Deployment&quot;">​</a></h3><p>无状态应用部署。<code>Deployment</code> 的作用是管理和控制<code>Pod</code>和<code>Replicaset</code>， 管控它们运行在用户期望的状态中。</p><h3 id="_1-2-2-replicaset" tabindex="-1">1.2.2. Replicaset <a class="header-anchor" href="#_1-2-2-replicaset" aria-label="Permalink to &quot;1.2.2. Replicaset&quot;">​</a></h3><p>确保预期的<code>Pod</code>副本数量。<code>Replicaset</code> 的作用就是管理和控制<code>Pod</code>，管控他们好好干活。 但是，<code>Replicaset</code> 受控于<code>Deployment</code>。</p><p>可以理解成 <code>Deployment</code> 就是总包工头，主要负责监督底下的工人<code>Pod</code>干活，确保每时每刻有用户要求数量的<code>Pod</code>在工作。如果一旦发现某个工人<code>Pod</code>不行了，就赶紧新拉一个<code>Pod</code>过来替换它。而 <code>ReplicaSet</code> 就是总包工头手下的小包工头。</p><p>从K8S使用者角度来看，用户会直接操作 <code>Deployment</code> 部署服务，而当 <code>Deployment</code> 被部署的时候，K8S 会自动生成要求的 <code>ReplicaSet</code> 和 <code>Pod</code>。用户只需要关心 <code>Deployment</code> 而不操心 <code>ReplicaSet</code>。</p><p>资源对象<code>Replication Controller</code>是 <code>ReplicaSet</code> 的前身，官方推荐用 <code>Deployment</code> 取代 <code>Replication Controller</code> 来部署服务</p><h3 id="_1-2-3-daemonset" tabindex="-1">1.2.3. Daemonset <a class="header-anchor" href="#_1-2-3-daemonset" aria-label="Permalink to &quot;1.2.3. Daemonset&quot;">​</a></h3><p>确保所有节点运行同一类<code>Pod</code>，保证每个节点上都有一个此类<code>Pod</code>运行，通常用于实现系统级后台任务。</p><h3 id="_1-2-4-statefulset" tabindex="-1">1.2.4. Statefulset <a class="header-anchor" href="#_1-2-4-statefulset" aria-label="Permalink to &quot;1.2.4. Statefulset&quot;">​</a></h3><p>有状态应用部署</p><h3 id="_1-2-5-job" tabindex="-1">1.2.5. Job <a class="header-anchor" href="#_1-2-5-job" aria-label="Permalink to &quot;1.2.5. Job&quot;">​</a></h3><p>一次性任务。根据用户的设置，Job管理的Pod把任务成功完成就自动退出了</p><h3 id="_1-2-6-cronjob" tabindex="-1">1.2.6. Cronjob <a class="header-anchor" href="#_1-2-6-cronjob" aria-label="Permalink to &quot;1.2.6. Cronjob&quot;">​</a></h3><p>周期性计划性任务</p><h2 id="_1-3-label" tabindex="-1">1.3. Label <a class="header-anchor" href="#_1-3-label" aria-label="Permalink to &quot;1.3. Label&quot;">​</a></h2><p>标签，是K8S特色的管理方式，便于分类管理资源对象。</p><p><code>Label</code>可以附加到各种资源对象上，例如<code>Node</code>、<code>Pod</code>、<code>Service</code>、 <code>RC</code>等，用于关联对象、查询和筛选。</p><p>一个<code>Label</code>是一个 <code>key-value</code> 的键值对，其中 <code>key</code> 与 <code>value</code> 由用户自己指定。</p><p>一个资源对象可以定义任意数量的<code>Label</code>，同一个<code>Label</code>也可以被添加到任意数量的资源对象中，也可以在对象创建后动态添加或者删除。可以通过给指定的资源对象捆绑一个或多个不同的<code>Label</code>，来实现多维度的资源分组管理功能。</p><h2 id="_1-4-label选择器-label-selector" tabindex="-1">1.4. Label选择器(Label selector ) <a class="header-anchor" href="#_1-4-label选择器-label-selector" aria-label="Permalink to &quot;1.4. Label选择器(Label selector )&quot;">​</a></h2><p>给某个资源对象定义一个<code>Label</code>， 就相当于给它打了一个标签，随后可以通过标签选择器(<code>Label selector</code>) 查询和筛选拥有某些Label的资源对象。</p><p>标签选择器目前有两种：基于等值关系(等于、不等于)和基于集合关系(属于、不属于、存在)。</p><h2 id="_1-5-service" tabindex="-1">1.5. Service <a class="header-anchor" href="#_1-5-service" aria-label="Permalink to &quot;1.5. Service&quot;">​</a></h2><p>在K8S的集群里，虽然每个<code>Pod</code>会被分配一个单独的IP地址，但由于<code>Pod</code>是有生命周期的(它们可以被创建，而且销毁之后不会再启动)，随时可能会因为业务的变更，导致这个IP地址也会随着 <code>Pod</code> 的销毁而消失，<code>Service</code>就是用来解决这个问题的核心概念。</p><p>K8S中的 <code>Service</code> 并不是我们常说的“服务”的含义，而更像是网关层，可以看作一组提供相同服务的Pod的对外访问接口、流量均衡器，<code>Service</code> 作用于哪些<code>Pod</code>，是通过<strong>标签选择器</strong>来定义的。</p><p>在K8S集群中，<code>Service</code> 可以看作一组提供相同服务的 <code>Pod</code> 的对外访问接口。客户端需要访问的服务就是 <code>Service</code> 对象。每个<code>Service</code>都有一个固定的虚拟IP (这个IP也被称为<code>Cluster IP</code>) ，自动并且动态地绑定后端的Pod, 所有的网络请求直接访问 <code>Service</code> 的虚拟IP，<code>Service</code>会自动向后端做转发。</p><p><code>Service</code>除了提供稳定的对外访问方式之外，还能起到<strong>负载均衡</strong><code>(Load Balance</code>) 的功能，自动把请求流量分布到后端所有的服务上，<code>service</code>可以做到对客户透明地进行水平扩展(<code>scale</code>)。</p><p>而实现 <code>service</code> 这一功能的关键， 就是<code>kube-proxy</code>。 <code>kube-proxy</code>运行在每个节点上，监听<code>API Server</code>中服务对象的变化，可通过以下三种流量调度模式: <code>userspace</code> (废弃)、<code>iptables</code> (濒临废弃)、<code>ipvs</code> (推荐，性能最好)来实现网络的转发。</p><p><code>Service</code>是K8S服务的核心，屏蔽了服务细节，统一对外暴露服务接口， 真正做到了“微服务”。比如我们的一个服务A，部署了3个副本，也就是3个<code>Pod</code>;对于用户来说，只需要关注一个 <code>Service</code> 的入口就可以，而不需要操心究竞应该请求哪一个<code>Pod</code>。</p><p>优势非常明显，一方面外部用户不需要感知因为<code>Pod</code>上服务的意外崩溃、 K8S 重新拉起 <code>Pod</code> 而造成的IP变更，外部用户也不需要感知因升级、变更服务带来的<code>Pod</code>替换而造成的IP变化。</p><h2 id="_1-6-ingress" tabindex="-1">1.6. Ingress <a class="header-anchor" href="#_1-6-ingress" aria-label="Permalink to &quot;1.6. Ingress&quot;">​</a></h2><p><code>Service</code>主要负责K8S 集群内部的网络拓扑，那么集群外部怎么访问集群内部呢?这个时候就需要<code>Ingress</code>了。</p><p><code>Ingress</code>是整个K8S集群的接入层，负责集群内外通讯。<code>Ingress</code>是 K8S 集群里工作在<code>OSI</code>网络参考模型下，第7层的应用，对外暴露的接口，典型的访问方式是<code>http/https</code>。</p><p><code>Service</code>只能进行第四层的流量调度，表现形式是<code>ip+port</code>。<code>Ingress</code>则可以调度不同业务域、不同URL访问路径的业务流量。比如:客户端请求<code>http://www.qq.com</code>: <code>port ---&gt; Ingress ---&gt; Service ---&gt; Pod</code></p><h2 id="_1-7-name" tabindex="-1">1.7. Name <a class="header-anchor" href="#_1-7-name" aria-label="Permalink to &quot;1.7. Name&quot;">​</a></h2><p>由于K8S内部，使用“资源”来定义每一种逻辑概念(功能)，所以每种“资源”，都应该有自己的“名称”。</p><p>“资源”有<code>api</code>版本(<code>apiversion</code>) 、类别(<code>kind</code>)、元数据(<code>metadata</code>) 、定义清单(<code>spec</code>)、状态(<code>status</code>) 等配置信息。</p><p>“名称”通常定义在“资源”的“元数据”信息里。在同一个 <code>namespace</code> 空间中必须是唯一的。</p><h2 id="_1-8-namespace" tabindex="-1">1.8. Namespace <a class="header-anchor" href="#_1-8-namespace" aria-label="Permalink to &quot;1.8. Namespace&quot;">​</a></h2><p>随着项目增多、人员增加、集群规模的扩大，需要一种能够逻辑上隔离K8S内各种“资源&quot;的方法，这就是<code>Namespace</code>。</p><p><code>Namespace</code>是为了把一个K8S集群划分为若千个资源不可共享的虚拟集群组而诞生的。不同 <code>Namespace</code> 内的“资源”名称可以相同，相同 <code>Namespace</code> 内的同种“资源”， “名称”不能相同。</p><p>合理的使用K8S的 <code>Namespace</code>，可以使得集群管理员能够更好的对交付到K8S里的服务进行分类管理和浏览。K8S里默认存在的 <code>Namespace</code> 有: <code>default</code>、 <code>kube-system</code>、 <code>kube-public</code> 等。</p><h1 id="_2-yaml示例" tabindex="-1">2. yaml示例 <a class="header-anchor" href="#_2-yaml示例" aria-label="Permalink to &quot;2. yaml示例&quot;">​</a></h1><p><code>Deployment</code> 配置如下，有 <code>labels</code>、<code>ports</code>、<code>replicas</code> 等。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment.nginx.the.test.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  minReadySeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RollingUpdate</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      k8s-app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment.nginx.the.test.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        k8s-app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment.nginx.the.test.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      restartPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      terminationGracePeriodSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      nodeSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      dnsPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ClusterFirst</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">the/image:123-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">container</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TCP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          volumeMounts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">corefile</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              mountPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data/corefile</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              readOnly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">logs</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              mountPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data/logs</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              readOnly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">corefile</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          hostPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data/corefile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">logs</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          hostPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data/logs</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      imagePullSecrets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nes-fe-secret</span></span></code></pre></div><p><code>Service</code> 配置如下，有 <code>ports</code> 等。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service-nginx-some-test-com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NodePort</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    k8s-app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment.nginx.the.test.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TCP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">container</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      nodePort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><p><code>Ingress</code> 配置如下，有 <code>hosts</code>、<code>http</code> 等。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking.k8s.io/v1beta1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ingress-the.test.com-0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    kubernetes.io/ingress.class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxxcloud</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    kubernetes.io/ingress.existLbId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">the.test.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      secretName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">the.test.com.cert</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">the.test.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              serviceName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service-nginx-some-test-com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              servicePort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre></div><h1 id="_3-参考" tabindex="-1">3. 参考 <a class="header-anchor" href="#_3-参考" aria-label="Permalink to &quot;3. 参考&quot;">​</a></h1><ul><li><a href="https://www.jianshu.com/p/f95579548cd3" target="_blank" rel="noreferrer">K8S的基本概念</a></li><li><a href="https://www.cnblogs.com/xkqwy/p/16466114.html" target="_blank" rel="noreferrer">K8S的基础概念</a></li><li><a href="https://blog.csdn.net/qq_30627241/article/details/126123488" target="_blank" rel="noreferrer">详解K8s基本概念</a></li><li><a href="https://blog.csdn.net/Drw_Dcm/article/details/127792480" target="_blank" rel="noreferrer">Pod控制器</a></li></ul>`,59)]))}const r=i(l,[["render",p]]);export{E as __pageData,r as default};
