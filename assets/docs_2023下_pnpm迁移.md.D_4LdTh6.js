import{_ as a,c as s,o as i,ag as t}from"./chunks/framework.6d7lLjym.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/2023下/pnpm迁移.md","filePath":"docs/2023下/pnpm迁移.md","lastUpdated":1746093153000}'),p={name:"docs/2023下/pnpm迁移.md"};function n(l,e,o,d,r,h){return i(),s("div",null,e[0]||(e[0]=[t(`<h2 id="_1-开始" tabindex="-1">1. 开始 <a class="header-anchor" href="#_1-开始" aria-label="Permalink to &quot;1. 开始&quot;">​</a></h2><p><code>pnpm</code>意为<code>performant npm</code>，即性能更佳的<code>npm</code>。在时间和空间上，<code>pnpm</code>都有极大提升，快、更节省空间。另外，还顺便解决了幽灵依赖的问题。</p><p>社区主流库都迁移了<code>pnpm</code>，比如<a href="https://github.com/vuejs/core/pull/4766" target="_blank" rel="noreferrer">vue</a>、<a href="https://github.com/vitejs/vite/pull/5060" target="_blank" rel="noreferrer">vitejs</a>、<a href="https://github.com/element-plus/element-plus" target="_blank" rel="noreferrer">element-plus</a>。</p><h2 id="_2-原理" tabindex="-1">2. 原理 <a class="header-anchor" href="#_2-原理" aria-label="Permalink to &quot;2. 原理&quot;">​</a></h2><p><code>pnpm</code>通过软硬链接的方式存放依赖，<code>node_modules</code>下的第一层文件，指向<code>node_modules/.pnpm</code>中，而<code>node_modules/.pnpm</code>中的包，又以硬链接的方式指向全局<code>store</code>。</p><h2 id="_3-pnpm迁移" tabindex="-1">3. pnpm迁移 <a class="header-anchor" href="#_3-pnpm迁移" aria-label="Permalink to &quot;3. pnpm迁移&quot;">​</a></h2><p>下面是项目迁移<code>pnpm</code>的步骤。</p><h3 id="_3-1-安装pnpm" tabindex="-1">3.1. 安装pnpm <a class="header-anchor" href="#_3-1-安装pnpm" aria-label="Permalink to &quot;3.1. 安装pnpm&quot;">​</a></h3><p>注意<code>node14</code>版本只能使用<code>pnpm7</code>及以下，参见<a href="https://pnpm.io/installation#compatibility" target="_blank" rel="noreferrer">官网说明</a>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><h3 id="_3-2-生成pnpm-lock-yaml" tabindex="-1">3.2. 生成pnpm-lock.yaml <a class="header-anchor" href="#_3-2-生成pnpm-lock-yaml" aria-label="Permalink to &quot;3.2. 生成pnpm-lock.yaml&quot;">​</a></h3><p>使用项目中的<code>package-lock.json</code>文件生成<code>pnpm-lock.yaml</code>文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import</span></span></code></pre></div><h3 id="_3-3-删除node-modules" tabindex="-1">3.3. 删除node_modules <a class="header-anchor" href="#_3-3-删除node-modules" aria-label="Permalink to &quot;3.3. 删除node_modules&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node_modules</span></span></code></pre></div><h3 id="_3-4-使用pnpm安装依赖" tabindex="-1">3.4. 使用pnpm安装依赖 <a class="header-anchor" href="#_3-4-使用pnpm安装依赖" aria-label="Permalink to &quot;3.4. 使用pnpm安装依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><h3 id="_3-5-解决幽灵依赖" tabindex="-1">3.5. 解决幽灵依赖 <a class="header-anchor" href="#_3-5-解决幽灵依赖" aria-label="Permalink to &quot;3.5. 解决幽灵依赖&quot;">​</a></h3><p>幽灵依赖就是没有在<code>package.json</code>中，但是项目中，或者引用的包中使用到的依赖。</p><p>我们项目的幽灵依赖包括：</p><ul><li>vue-loader</li><li>@types/jest</li><li>js-base64</li><li>tim-upload-plugin</li><li>vue-plugin-load-script</li><li>...</li></ul><h2 id="_4-遇到的问题" tabindex="-1">4. 遇到的问题 <a class="header-anchor" href="#_4-遇到的问题" aria-label="Permalink to &quot;4. 遇到的问题&quot;">​</a></h2><h3 id="_4-1-loader-utils" tabindex="-1">4.1. loader-utils <a class="header-anchor" href="#_4-1-loader-utils" aria-label="Permalink to &quot;4.1. loader-utils&quot;">​</a></h3><p><code>html-webpack-plugin</code>版本不能是<code>v0.x</code>版本，需要升级到<code>v1.x</code>，否则会因为<code>loader-utils</code>版本问题而报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Syntax Error: TypeError: loaderUtils.getOptions is not a function</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span> @ ./src/project/tgs/main.js 14:0-35 221:13-16</span></span>
<span class="line"><span> @ multi ./node_modules/.pnpm/webpack-dev-server@3.11.3_webpack@4.46.0/node_modules/webpack-dev-server/client?https://192.168.1.17:443&amp;sockPath=/sockjs-node (webpack)/hot/dev-server.js ./src/project/tgs/main.js</span></span></code></pre></div><p>也不能是3，只能是1或者2。</p><h3 id="_4-2-postcss" tabindex="-1">4.2. PostCSS <a class="header-anchor" href="#_4-2-postcss" aria-label="Permalink to &quot;4.2. PostCSS&quot;">​</a></h3><p>报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Syntax Error: Error: PostCSS plugin autoprefixer requires PostCSS 8.</span></span></code></pre></div><p>解决办法：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoprefixer@8.0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webpack@4.46</span></span></code></pre></div><h3 id="_4-3-eslint解析vue组件失败" tabindex="-1">4.3. eslint解析Vue组件失败 <a class="header-anchor" href="#_4-3-eslint解析vue组件失败" aria-label="Permalink to &quot;4.3. eslint解析Vue组件失败&quot;">​</a></h3><p>报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>invalid ecmaVersion</span></span></code></pre></div><p>解决办法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .eslintrc.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parserOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ecmaVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h3 id="_4-4-eisdir-illegal-operation" tabindex="-1">4.4. EISDIR: illegal operation <a class="header-anchor" href="#_4-4-eisdir-illegal-operation" aria-label="Permalink to &quot;4.4. EISDIR: illegal operation&quot;">​</a></h3><p>之前通过<code>npm</code>安装的包要删除之后，再执行<code>pnpm install</code>，否则会报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> EISDIR  EISDIR: illegal operation on a directory, read</span></span></code></pre></div><h3 id="_4-5-miniprogram-ci" tabindex="-1">4.5. miniprogram-ci <a class="header-anchor" href="#_4-5-miniprogram-ci" aria-label="Permalink to &quot;4.5. miniprogram-ci&quot;">​</a></h3><p>小程序的CI工具用pnpm的时候有问题，问了相关开发人员，目前并不支持。</p><p><a href="https://developers.weixin.qq.com/community/develop/doc/000e284b7d4bc09b194d0748356800" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/community/develop/doc/000e284b7d4bc09b194d0748356800</a></p><h3 id="_4-6-vue-loader版本" tabindex="-1">4.6. vue-loader版本 <a class="header-anchor" href="#_4-6-vue-loader版本" aria-label="Permalink to &quot;4.6. vue-loader版本&quot;">​</a></h3><p><code>vue-loader</code>需要安装15版本，否则会报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Syntax Error: Error: @vitejs/plugin-vue requires vue (&gt;=3.2.13) or @vue/compiler-sfc to be present in the dependency tree.</span></span></code></pre></div><p>参考<a href="https://stackoverflow.com/questions/64117281/error-vue-loader-requires-vue-compiler-sfc-to-be-present-in-the-dependency-tr" target="_blank" rel="noreferrer">这里</a></p><h3 id="_4-7-file-type" tabindex="-1">4.7. file-type <a class="header-anchor" href="#_4-7-file-type" aria-label="Permalink to &quot;4.7. file-type&quot;">​</a></h3><p>报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error [ERR_REQUIRE_ESM]: Must use import to load ES Module</span></span></code></pre></div><p>解决：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file-type@16.5.3</span></span></code></pre></div><p>参考：<a href="https://github.com/sindresorhus/file-type/issues/535" target="_blank" rel="noreferrer">https://github.com/sindresorhus/file-type/issues/535</a></p><h3 id="_4-8-vue-jest" tabindex="-1">4.8. vue-jest <a class="header-anchor" href="#_4-8-vue-jest" aria-label="Permalink to &quot;4.8. vue-jest&quot;">​</a></h3><p>vue-jest@3.0.7版本安装失败，需要按照 vue-jest@4。</p><h2 id="_5-效果对比" tabindex="-1">5. 效果对比 <a class="header-anchor" href="#_5-效果对比" aria-label="Permalink to &quot;5. 效果对比&quot;">​</a></h2><p>其实我们的流水线已经做了优化，会对比<code>package.json</code>的依赖是否相同，若不同才执行<code>npm install</code>。</p><p>但问题是多个分支使用的是同一条流水线，而不同分支上的依赖很有可能不同，比如<code>press-ui</code>就处于持续迭代阶段，所以用<code>pnpm</code>优化还是有必要的。</p><p>全量安装的话，能节省<code>90s</code>左右，之前耗时：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2023/8/own_mike_c1021396214509dde6.png" width="300"><p>现在：</p><img src="https://mike-1255355338.cos.ap-guangzhou.myqcloud.com/article/2023/8/own_mike_7669daf7aa9fbb14dc.png" width="300">`,62)]))}const k=a(p,[["render",n]]);export{u as __pageData,k as default};
